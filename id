import re

n=(input(u"请输入你的身份证号："))

def check_id_card(id_card):

    errors = ['验证通过!', '身份证号码位数不对!', '身份证号码出生日期超出范围或含有非法字符!', '身份证号码校验错误!', '身份证地区非法!']

    area = {"11": "北京", "12": "天津", "13": "河北", "14": "山西", "15": "内蒙古", "21": "辽宁", "22": "吉林", "23": "黑龙江",

            "31": "上海", "32": "江苏", "33": "浙江", "34": "安徽", "35": "福建", "36": "江西", "37": "山东", "41": "河南", "42": "湖北",

            "43": "湖南", "44": "广东", "45": "广西", "46": "海南", "50": "重庆", "51": "四川", "52": "贵州", "53": "云南", "54": "西藏",

            "61": "陕西", "62": "甘肃", "63": "青海", "64": "宁夏", "65": "新疆", "71": "台湾", "81": "香港", "82": "澳门", "91": "国外"}

    

    if not area[id_card[0:2]]:

        print(errors[4])

    else :

        print("出生地点:",area[n[0:2]],end="")
        return (" ")


def sex_check_bit(id_card):

    s=int (n[16])%2

    if s==0 :
        return("性别为：女")
    else :
        return("性别为：男")



def generate_check_bit(string):

    s = map(int, string)

    a = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]

    b = sum(map(lambda x: x[0] * x[1], zip(a, s)))

    c = b % 11

    d = ['1', '0', 'x', '9', '8', '7', '6', '5', '4', '3', '2']

    if d[c]==n[17]:
        print("检验位为：",end="")
        return d[c]
    else :
        return "该身份证无效"
print(check_id_card(n))
print("出生年月日：",n[6:10],n[10:12],n[12:14])
print(sex_check_bit(n))
print(generate_check_bit(n))
